// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Stock_API.Models;

namespace Stock_API.Migrations
{
    [DbContext(typeof(Stock_APIContext))]
    [Migration("20200522135047_profitcenter")]
    partial class profitcenter
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Stock_API.Entities.ProftCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("ProftCenterName");

                    b.Property<string>("TelephoneNumber");

                    b.HasKey("Id");

                    b.ToTable("ProftCenter");
                });

            modelBuilder.Entity("Stock_API.Entities.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Branch");

                    b.Property<int?>("ProftCenterId");

                    b.Property<int>("Quantity");

                    b.Property<int>("StockId");

                    b.Property<string>("StockName");

                    b.HasKey("Id");

                    b.HasIndex("ProftCenterId");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("Stock_API.Entities.Stock", b =>
                {
                    b.HasOne("Stock_API.Entities.ProftCenter")
                        .WithMany("stocks")
                        .HasForeignKey("ProftCenterId");
                });
#pragma warning restore 612, 618
        }
    }
}
